{"version":3,"file":"static/js/712.df8bef8d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList.styled.js","components/Contacts/ContactList.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","components/MainContainer.styled.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (items, filter) => {\n   \n    return items.filter((item) =>\n        item.name.toLowerCase().includes(filter.toLowerCase()))\n\n});\n\n\n","import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n    width: 320px;\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(6)};\n    border: 1px solid ${p => p.theme.colors.secondaryColor};\n    border-radius: ${p => p.theme.radius.l};\n`\nexport const StyledLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(2)};  \n    color: ${p => p.theme.colors.labelColor};\n`\n\nexport const StyledField = styled(Field)`      \n    padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n    outline: transparent;\n    border: 1px solid ${p => p.theme.colors.borderColor};\n    border-radius: ${p => p.theme.radius.m};    \n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));   \n`\nexport const StyledErrMessage = styled(ErrorMessage)`\n    color: ${p => p.theme.colors.errorColor};\n    font-size: 12px;\n`\nexport const AddContact = styled.button`\n    font-weight: 500; \n    width: 150px;\n    height: 26px;\n    border: 1px solid ${p => p.theme.colors.borderColor};\n    border-radius: ${p => p.theme.radius.m};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.accentColor};\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);        \n\n    &:hover{\n        background-color: ${p => p.theme.colors.secondaryColor};       \n    }\n`\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { StyledForm, StyledLabel, StyledField, AddContact, StyledErrMessage  } from './Form.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst formSchema = Yup.object().shape({\n    name: Yup.string() \n    .matches(/^[a-zA-Zа-яА-Я]+(([ ' -][a-zA-Zа-яА-Я ])?[a-zA-ЯА-Я]*)*$/, 'The name format is incorrect!')    \n    .required('Required'),\n    phone: Yup.string()\n    .matches(/\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,'The phone number format is incorrect!') \n    .required('Required'),\n})\n\nexport const ContactForm = () => {\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);  \n    \n  const saveContact = ({name, phone}) => {\n  \n    const isExist = contacts.some(contact => contact.name === name);\n     \n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    const newContact = {     \n        name, phone };\n    dispatch(addContact(newContact));    \n  }; \n\n    return ( \n        <Formik\n        initialValues={{\n          name: '',\n          phone: '',          \n        }}\n        validationSchema={formSchema}        \n        onSubmit={(values, actions) => { \n          saveContact(values);       \n         actions.resetForm();\n        }}       \n      >\n        <StyledForm>\n          <StyledLabel>\n            Name\n            <StyledField  name=\"name\" type=\"text\"/>\n            <StyledErrMessage name=\"name\" component=\"span\"/>\n          </StyledLabel>\n          <StyledLabel>\n            Number\n          <StyledField  name=\"phone\" type='tel' />\n          <StyledErrMessage name=\"phone\" component=\"span\"/>\n            </StyledLabel>          \n          <AddContact type=\"submit\">Add contact</AddContact>\n        </StyledForm>\n      </Formik>       \n    )\n};\n","import styled from \"styled-components\";\n\nexport const ListItem = styled.li`\n    display: flex;\n    gap: ${p => p.theme.spacing(2)};\n    text-transform: capitalize;\n`\nexport const DeleteBtn = styled.button`\n    font-weight: 500;    \n    letter-spacing: 0.04em;\n    width: 100px;\n    height: 26px;\n    border: 1px solid ${p => p.theme.colors.borderColor};\n    border-radius: ${p => p.theme.radius.m};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    color: ${p => p.theme.colors.accentColor};\n    background-color: ${p => p.theme.colors.white};    \n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), \n        color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n     &:hover{ \n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.secondaryColor}; \n    } \n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { DeleteBtn, ListItem } from \"./ContactListItem.styled\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nexport const ContactListItem = () => {\n  \n    const dispatch = useDispatch();       \n    const items = useSelector(selectFilteredContacts);\n  \n    return(\n      <>\n        {items.map(item =>\n          <ListItem key={item.id}>\n              <span>{item.name}: {item.phone}</span>             \n              <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(item.id))}>\n                  Delete\n              </DeleteBtn>\n          </ListItem>\n        ) }  \n      </>      \n    );\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`       \n    padding: ${p => p.theme.spacing(3)};\n    display: flex;\n    flex-direction: column;   \n    gap: ${p => p.theme.spacing(4)};\n`\n","import { ContactListItem } from \"components/ContactListItem/ContactListItem\"\nimport { List } from \"./ContactList.styled\"\n\nexport const ContactList = () => {\n\n    return (\n        <List>                     \n            <ContactListItem />                        \n        </List>        \n    )\n};","import styled from \"styled-components\";\n\n\nexport const FilterLabel = styled.label`\n    width: 300px;   \n    display: flex;\n    flex-direction: column;\n    gap:${p => p.theme.spacing(2)};    \n`\nexport const FilterInput = styled.input`     \n    padding: ${p => p.theme.spacing(3)};\n    border: 1px solid ${p => p.theme.colors.secondaryColor};\n    border-radius: ${p => p.theme.radius.m} ;\n    outline: transparent; \n`","import { useDispatch, useSelector } from \"react-redux\"\nimport { FilterInput, FilterLabel } from \"./ContactFilter.styled\"\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\n\n\nexport const ContactFilter = () => {\n \n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n      \n    const changeFilter = evt => {    \n      dispatch(setFilter(evt.target.value))\n    };\n\n    return (\n        <FilterLabel>\n            Find contacts by name\n            <FilterInput type=\"text\" name=\"filter\" value={filter}\n            onChange={changeFilter}/>\n        </FilterLabel>        \n    );\n};","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    font-size: 18px;\n    gap: ${p => p.theme.spacing(4)};\n    padding: 24px;\n    margin: 0 auto;\n    align-items: center;\n`","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { ContactForm } from \"./Form/Form\";\n// import { ContactList } from \"./Contacts/ContactList\";\n// import { ContactFilter } from \"./ContactFilter/ContactFilter\";\n// import { MainContainer } from \"./MainContainer.styled\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { ContactForm } from \"components/Form/Form\";\nimport { ContactList } from \"components/Contacts/ContactList\";\nimport { ContactFilter } from \"components/ContactFilter/ContactFilter\";\nimport { MainContainer } from \"components/MainContainer.styled\";\n\n\nexport default function Contacts(){  \n  \n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactFilter />\n      {isLoading && !error && \n      <b>Request in progress...</b>\n      }\n      <ContactList />      \n    </MainContainer>\n  );\n};"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","item","name","toLowerCase","includes","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","secondaryColor","radius","l","StyledLabel","_templateObject2","labelColor","StyledField","Field","_templateObject3","borderColor","m","StyledErrMessage","ErrorMessage","_templateObject4","errorColor","AddContact","_templateObject5","white","accentColor","formSchema","Yup","shape","matches","required","phone","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","_ref","some","contact","alert","concat","newContact","addContact","saveContact","resetForm","children","_jsxs","type","component","ListItem","DeleteBtn","ContactListItem","_Fragment","map","onClick","deleteContact","id","List","ContactList","FilterLabel","FilterInput","ContactFilter","value","onChange","evt","setFilter","target","MainContainer","Contacts","useEffect","fetchContacts"],"sourceRoot":""}